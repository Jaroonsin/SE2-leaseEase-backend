// Code generated by mockery v2.53.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// PaymentService is an autogenerated mock type for the PaymentService type
type PaymentService struct {
	mock.Mock
}

// ProcessPayment provides a mock function with given fields: userID, currency, token, reservationID
func (_m *PaymentService) ProcessPayment(userID uint, currency string, token string, reservationID uint) error {
	ret := _m.Called(userID, currency, token, reservationID)

	if len(ret) == 0 {
		panic("no return value specified for ProcessPayment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uint, string, string, uint) error); ok {
		r0 = rf(userID, currency, token, reservationID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewPaymentService creates a new instance of PaymentService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentService(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentService {
	mock := &PaymentService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
